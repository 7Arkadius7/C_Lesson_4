Console.Clear();

// string[,] table = new string[2, 5];

// // String.Empty - константа

// table[1, 2] = "слово";

// for (int rows = 0; rows < 2; rows++)
// {
//     for (int columns = 0; columns < 5; columns++)
//     {
//         System.Console.WriteLine($"{table[rows, columns]}-");
//     }
// }
//____________________________________________________________________________________________



// void PrintArray(int[,] matr) // создаем метод
// {
//     for (int i = 0; i < matr.GetLength(0); i++) // где matrix - название матрицы, а .GetLength(0) - количество строк в данной матрице (0)
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) // где где matrix - название матрицы, а .GetLength(1) - количество строк в данной матрице (1)
//         {
//             System.Console.Write($"{matr[i, j]} "); // выводим данные из определенного столбца (i) и строки (j).
//                                                     // i берется из первого цикла, j из подцикла
//         }
//         System.Console.WriteLine(); // переход на новую строку
//     }
// }

// void FillArray(int[,] matr)
// {
//     for (int i = 0; i < matr.GetLength(0); i++) // где matrix - название матрицы, а .GetLength(0) - количество строк в данной матрице (0)
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) // где где matrix - название матрицы, а .GetLength(1) - количество строк в данной матрице (1)
//         {
//             matr[i, j] = new Random().Next(1, 10); // дабавляем случайное число в определенный столбец (i) и строку (j).
//                                                    // i берется из первого цикла, j из подцикла. Берется i и прогоняется по всем значениям j
//                                                    // затем берется i+1 и прогоняются все значения j
//                     }
//     }
// }

// int[,] matrix = new int[3, 4]; // вводим размер матрицы данных
// PrintArray(matrix); // выводим матрицу с 0
// System.Console.WriteLine(); // переход на новую строку
// FillArray(matrix); // используем метод FillArray по заполнению матрицы случайными числами
// PrintArray(matrix); // выводим матрицу с случайными числами


//______________________________________________________________________________________________

// int[,] pic = new int[,] // дан массив (уже готовый, но его тут нет), он представляет собой рисунок состоящий из "0" с контуром из "1"
// {
//     {0,0,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,1,1,1,1,1,1,1,1,1,0,0},
//     {0,0,1,0,0,0,0,0,0,0,1,0,0},
//     {0,0,1,0,0,0,0,0,0,0,1,0,0},
//     {0,0,1,0,0,0,0,0,0,0,1,0,0},
//     {0,0,1,1,1,1,1,1,1,1,1,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,0,0}
// };

// void PrintImage(int[,] image) // создаем метод
// {
//     for (int i = 0; i < image.GetLength(0); i++) // где image - название матрицы, а .GetLength(0) - количество строк в данной матрице (0)
//     {
//         for (int j = 0; j < image.GetLength(1); j++) // где где image - название матрицы, а .GetLength(1) - количество строк в данной матрице (1)
//         {
//             // System.Console.Write($"{image[i, j]} "); // выводим данные из определенного столбца (i) и строки (j).
//             //                                         // i берется из первого цикла, j из подцикла
//             if (image[i, j] == 0) Console.Write($" "); // будем проверять, если i,j - элемент совпадает с 0 то в этом случае печатается "пробел"
//             else System.Console.Write("+"); // иначе будем ставить "+"
//         }
//         System.Console.WriteLine(); // переход на новую строку
//     }
// }

// void FillImage(int row, int col)
// {
//     if (pic[row, col] == 0)
//     {
//         pic[row, col] = 1;
//         FillImage(row - 1, col);
//         FillImage(row, col - 1);
//         FillImage(row + 1, col);
//         FillImage(row, col + 1);
//     }
// }

// PrintImage(pic);
// FillImage(3, 6);

//______________________________________________________________________________________________


// double Factorial(int n) // описываем метод поиска факториала
// {

//     if(n == 1) return 1; // если n(число от которого ищем факториал) равен 1, то пишем на выходе 1
//     else return n *Factorial(n-1); // иначе делаем рекурсию метода, 
//                                    // т.е. число n(число от которого ищем факториал) умножаем на (n-1) и повторяем
//                                    // пока n == 1 (как указанно в первом условии if)
// }

// System.Console.WriteLine(Factorial(5));  // выводим метод поиска факториала (5) на экран

// for (int i = 1; i < 20; i++) // прописываем дополнительное условие задачи по поиску факториала до 19 (т.к. < 20) истользуя метод,
//                              // который описывали ранее начиная с (1). Данное действие делаем через цикл, чтобы перебирали каждое число
// {
//     Console.WriteLine($"{i}! = {Factorial(i)}"); // выводим каждое значение проходящее через цикл на экран
// }




//______________________________________________________________________________________________




// double Fibonachi(int n) // описываем метод поиска чисел Фибоничи
// {
//     if(n == 1 || n == 2) return 1;                  // если n(число от которого ищем число Фибоничи) равен 1 или (||) 2, то пишем на выходе 1
//     else return Fibonachi(n-1) + Fibonachi(n-2);    // иначе делаем рекурсию метода, 
//                                                     // т.е. число метод поска числа Фибоничи от (n -1) (число от которого ищем число Фибоничи) 
//                                                     // складываем с методом поиска числа Фибоничи (n-2) и повторяем
//                                                     // пока n == 1 (как указанно в первом условии if)
// }

// System.Console.WriteLine(Fibonachi(8));  // выводим метод поиска число Фибоничи (5) на экран

// for (int i = 1; i < 40; i++) // прописываем дополнительное условие задачи по поискучисло Фибоничи до 39 (т.к. < 40) истользуя метод,
//                              // который описывали ранее начиная с (1). Данное действие делаем через цикл, чтобы перебирали каждое число
// {
//     Console.WriteLine($"f({i}) = {Fibonachi(i)}"); // выводим каждое значение проходящее через цикл на экран
// }



//______________________________________________________________________________________________



